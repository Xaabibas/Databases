BEGIN;
CREATE TABLE IF NOT EXISTS GROUPS (
	GROUP_ID serial PRIMARY KEY,
	NAME varchar(50) NOT NULL
);
CREATE TABLE IF NOT EXISTS PEOPLE (
	PERSON_ID serial PRIMARY KEY,
	GROUP_ID integer REFERENCES GROUPS,
	NAME varchar(50) NOT NULL,
	IS_ORGANIZER boolean NOT NULL DEFAULT FALSE
);
CREATE TABLE IF NOT EXISTS CARS (
	CAR_ID serial PRIMARY KEY,
	NAME varchar(50),
	SPEED integer NOT NULL,
	CLASS char(1),
	SEATS integer NOT NULL
);
ALTER TABLE CARS ADD CONSTRAINT speed_and_seats_check CHECK (SPEED > 0 AND SEATS > 0);
CREATE TABLE IF NOT EXISTS COORDINATES (
	COORD_ID integer PRIMARY KEY,
	X smallint NOT NULL,
	Y smallint NOT NULL
);
ALTER TABLE COORDINATES ADD CONSTRAINT coord_check CHECK (X BETWEEN -180 AND 180 AND Y BETWEEN -90 AND 90);

CREATE TABLE IF NOT EXISTS ANIMAL_TYPES (
	ANIMAL_KEY integer PRIMARY KEY,
	NAME varchar(50) NOT NULL UNIQUE,
	IS_UNIQUE boolean DEFAULT FALSE
);
CREATE TABLE IF NOT EXISTS PLACES (
	PLACE_ID integer PRIMARY KEY,
	COORD_ID integer REFERENCES COORDINATES,
	NAME varchar(50)
);
CREATE TABLE IF NOT EXISTS ANIMAL_TYPES_TO_PLACES (
	PLACE_ID integer REFERENCES PLACES,
	ANIMAL_ID integer REFERENCES ANIMAL_TYPES,
	PRIMARY KEY(PLACE_ID, ANIMAL_ID)
);
CREATE TABLE IF NOT EXISTS TRIPS (
	TRIP_ID integer PRIMARY KEY,
	TARGET_ID integer REFERENCES PLACES,
	CAR_ID integer REFERENCES CARS,
	GROUP_ID integer REFERENCES GROUPS
);
INSERT INTO GROUPS (NAME)
VALUES
	('Main'),
	('Some group');
INSERT INTO PEOPLE (GROUP_ID, NAME, IS_ORGANIZER)
VALUES
	(1, 'Хилвар', FALSE),
	(1, 'Олвин', TRUE),
	(2, 'Ванек', TRUE);
INSERT INTO CARS (NAME, SPEED, CLASS, SEATS)
VALUES 
	('Мобиль', 30, 'C', 2),
	('Porsche 911', 180, 'E', 2),
	('Запорожец', 90, 'B', 4);
INSERT INTO COORDINATES 
VALUES
	(1, 1, 2),
	(2, 59, 30),
	(3, -3, 12);
INSERT INTO ANIMAL_TYPES 
VALUES 
	(1, 'Калибри', TRUE),
	(2, 'Собака', FALSE);
INSERT INTO PLACES 
VALUES
	(1, 2, 'Санкт-Петербург'),
	(2, 1, 'Hell'),
	(3, 3, 'Somewhere');
INSERT INTO ANIMAL_TYPES_TO_PLACES 
VALUES
	(1, 2),
	(3, 1);
INSERT INTO TRIPS 
VALUES
	(1, 1, 1, 1),
	(2, 2, 3, 2);
END;

