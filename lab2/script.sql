/*
Таблицы: Н_ОЦЕНКИ, Н_ВЕДОМОСТИ.
Вывести атрибуты: Н_ОЦЕНКИ.КОД, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
Фильтры (AND):
a) Н_ОЦЕНКИ.КОД = незач.
b) Н_ВЕДОМОСТИ.ИД < 1426978.
Вид соединения: INNER JOIN.
*/

SELECT Н_ОЦЕНКИ.КОД, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ОЦЕНКИ
JOIN Н_ВЕДОМОСТИ ON ОЦЕНКА = КОД
WHERE КОД = 'незач' AND
ИД < 1426978;

/*
2.	Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.УЧГОД.
Фильтры (AND):
a) Н_ЛЮДИ.ИД > 142095.
b) Н_ВЕДОМОСТИ.ИД > 1457443.
c) Н_СЕССИЯ.УЧГОД = 2011/2012.
Вид соединения: LEFT JOIN.
*/

SELECT Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.УЧГОД
FROM Н_ЛЮДИ
LEFT JOIN Н_ВЕДОМОСТИ
ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
LEFT JOIN Н_СЕССИЯ
ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ИД > 142095
AND Н_ВЕДОМОСТИ.ИД > 1457443
AND Н_СЕССИЯ.УЧГОД = '2011/2012';
--Пустая таблица--

/*
Составить запрос, который ответит на вопрос, есть ли среди студентов ФКТИУ те, кто не имеет отчества.
*/
--КОРОТКОЕ_ИМЯ= 'КТиУ'--
--нет отчества == '.'--

SELECT
EXISTS(
	SELECT 1
	FROM Н_УЧЕНИКИ
	JOIN Н_ЛЮДИ 
	ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
	JOIN Н_ПЛАНЫ
	ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	JOIN Н_ОТДЕЛЫ
	ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
	WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
	AND Н_ЛЮДИ.ОТЧЕСТВО = '.');

/*
В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) ровно 2 групп на очной форме обучения.
Для реализации использовать подзапрос.
*/

SELECT ПЛАН_ИД, КОЛИЧЕСТВО
FROM (SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД AS ПЛАН_ИД,
	COUNT(Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД) AS КОЛИЧЕСТВО
	FROM Н_ГРУППЫ_ПЛАНОВ
	JOIN Н_ПЛАНЫ
	ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	JOIN Н_ФОРМЫ_ОБУЧЕНИЯ
	ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
	WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
	GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
	) AS ОЧН_ПЛАНЫ
WHERE КОЛИЧЕСТВО = 2;

/*
Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не больше максимальной оценк(е|и) в группе 3100.
*/

WITH СТУДЕНТЫ_И_СР_ОЦЕНКИ AS(
	SELECT Н_УЧЕНИКИ.ГРУППА AS ГРУППА,
	Н_УЧЕНИКИ.ЧЛВК_ИД AS ИД,
	Н_ЛЮДИ.ФАМИЛИЯ AS ФАМИЛИЯ,
	Н_ЛЮДИ.ИМЯ AS ИМЯ,
	Н_ЛЮДИ.ОТЧЕСТВО AS ОТЧЕСТВО,
	AVG(
		CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)
	) AS СР_ОЦЕНКА
	FROM Н_УЧЕНИКИ
	JOIN Н_ЛЮДИ
	ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
	JOIN Н_ВЕДОМОСТИ
	ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
	
	WHERE Н_ВЕДОМОСТИ.ОЦЕНКА IN ('2', '3', '4', '5')
	
	GROUP BY Н_УЧЕНИКИ.ГРУППА,
	Н_УЧЕНИКИ.ЧЛВК_ИД,
	Н_ЛЮДИ.ФАМИЛИЯ,
	Н_ЛЮДИ.ИМЯ,
	Н_ЛЮДИ.ОТЧЕСТВО

)

SELECT ГРУППА, ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, СР_ОЦЕНКА

FROM СТУДЕНТЫ_И_СР_ОЦЕНКИ

WHERE СР_ОЦЕНКА <= (
	SELECT 
	MAX(СР_ОЦЕНКА)
	FROM СТУДЕНТЫ_И_СР_ОЦЕНКИ
	
	WHERE ГРУППА = '3100'
)
AND ГРУППА = '4100'

GROUP BY ГРУППА, ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, СР_ОЦЕНКА;


--Максимальный балл в 3100--
/*
WITH СТУДЕНТЫ_И_СР_ОЦЕНКИ AS(
	SELECT Н_УЧЕНИКИ.ГРУППА AS ГРУППА,
	Н_УЧЕНИКИ.ЧЛВК_ИД AS ИД,
	Н_ЛЮДИ.ФАМИЛИЯ AS ФАМИЛИЯ,
	Н_ЛЮДИ.ИМЯ AS ИМЯ,
	Н_ЛЮДИ.ОТЧЕСТВО AS ОТЧЕСТВО,
	AVG(
		CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)
	) AS СР_ОЦЕНКА
	FROM Н_УЧЕНИКИ
	JOIN Н_ЛЮДИ
	ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
	JOIN Н_ВЕДОМОСТИ
	ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
	
	WHERE Н_ВЕДОМОСТИ.ОЦЕНКА IN ('2', '3', '4', '5')
	
	GROUP BY Н_УЧЕНИКИ.ГРУППА,
	Н_УЧЕНИКИ.ЧЛВК_ИД,
	Н_ЛЮДИ.ФАМИЛИЯ,
	Н_ЛЮДИ.ИМЯ,
	Н_ЛЮДИ.ОТЧЕСТВО

)

SELECT MAX(СР_ОЦЕНКА)
FROM СТУДЕНТЫ_И_СР_ОЦЕНКИ
WHERE ГРУППА = '3100';
*/

/*
Получить список студентов, отчисленных ровно первого сентября 2012 года с заочной формы обучения (специальность: 230101). В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер пункта приказа;
Для реализации использовать подзапрос с EXISTS.
*/

SELECT

Н_УЧЕНИКИ.ГРУППА,
Н_ЛЮДИ.ИД,
Н_ЛЮДИ.ФАМИЛИЯ, 
Н_ЛЮДИ.ИМЯ,
Н_ЛЮДИ.ОТЧЕСТВО,
Н_УЧЕНИКИ.П_ПРКОК_ИД

FROM Н_УЧЕНИКИ 
JOIN Н_ЛЮДИ 
ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ПЛАНЫ
ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ
ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
	AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная' 
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ
ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
JOIN Н_НАПР_СПЕЦ
ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД 
	AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'

WHERE EXISTS (
	SELECT * 
	FROM Н_УЧЕНИКИ
	
	WHERE ПРИЗНАК = 'отчисл'
	AND СОСТОЯНИЕ = 'утвержден'
	AND DATE(КОНЕЦ) = '2012-09-01'
);

--Пустая таблица--
--Отчисленные с заочной формы обучения отсутствуют--
/*
SELECT

Н_УЧЕНИКИ.ГРУППА,
Н_ЛЮДИ.ИД,
Н_ЛЮДИ.ФАМИЛИЯ, 
Н_ЛЮДИ.ИМЯ,
Н_ЛЮДИ.ОТЧЕСТВО,
Н_УЧЕНИКИ.П_ПРКОК_ИД,
Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ

FROM Н_УЧЕНИКИ 
JOIN Н_ЛЮДИ 
ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ПЛАНЫ
ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ
ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ
ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
JOIN Н_НАПР_СПЕЦ
ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД 
	AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'

WHERE EXISTS (
	SELECT * 
	FROM Н_УЧЕНИКИ
	
	WHERE ПРИЗНАК = 'отчисл'
	AND СОСТОЯНИЕ = 'утвержден'
);
*/

/*
Вывести список людей, не являющихся или не являвшихся студентами СПбГУ ИТМО (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ). 
В запросе нельзя использовать DISTINCT.
*/
--СПбГУИТМО--

SELECT ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО
FROM Н_ЛЮДИ

WHERE NOT EXISTS (
	SELECT * 
	FROM Н_ЛЮДИ
	JOIN Н_УЧЕНИКИ 
	ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	JOIN Н_ПЛАНЫ
	ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	JOIN Н_ОТДЕЛЫ
	ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
		AND Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'СПбГУИТМО'
);
